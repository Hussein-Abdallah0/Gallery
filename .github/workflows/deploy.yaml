name: Deploy Gallery Backend

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: docker.io/husseinabdallah02/gallery-server

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: gallerydb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, zip, mysql, xml
          coverage: none

      - name: Install dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist

      - name: Copy .env
        run: |
          cd backend
          cp .env.example .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=1234/g' .env
          sed -i 's/JWT_SECRET=/JWT_SECRET=pJrp4ESHr8mTpBYsQbo2gcTpyu7ZSE3rsTKw4PMvPSA7dQK9DmFHpHc0BvGITYoT/g' .env

      - name: Generate app key
        run: php artisan key:generate
        working-directory: ./backend

      - name: Execute tests
        run: php artisan test
        working-directory: ./backend

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} # Should be 'husseinabdallah02'
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Check if docker is installed
            if ! command -v docker &> /dev/null; then
                echo "Docker not found, installing..."
                sudo apt-get update
                sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                sudo apt-get update
                sudo apt-get install -y docker-ce
                sudo usermod -aG docker $USER
            fi

            # Check if docker-compose is installed
            if ! command -v docker-compose &> /dev/null; then
                echo "Docker Compose not found, installing..."
                sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Create directory if it doesn't exist
            mkdir -p /var/www/gallery
            cd /var/www/gallery

            # Pull and run the application
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            docker-compose down
            docker-compose up -d
            docker exec laravel_server php artisan migrate --force
