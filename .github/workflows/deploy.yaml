name: Deploy Gallery Backend

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: docker.io/husseinabdallah02/gallery-server

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: gallerydb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, zip, mysql, xml
          coverage: none

      - name: Install dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist

      - name: Copy .env
        run: |
          cd backend
          cp .env.example .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=1234/g' .env
          sed -i 's/JWT_SECRET=/JWT_SECRET=pJrp4ESHr8mTpBYsQbo2gcTpyu7ZSE3rsTKw4PMvPSA7dQK9DmFHpHc0BvGITYoT/g' .env

      - name: Generate app key
        run: php artisan key:generate
        working-directory: ./backend

      - name: Execute tests
        run: php artisan test
        working-directory: ./backend

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Prepare deployment files
        run: |
          mkdir -p deploy_files
          cp docker-compose.yml deploy_files/
          tar -czvf deploy.tar.gz deploy_files/

      - name: Upload deployment package
        uses: actions/upload-artifact@v3
        with:
          name: deploy-package
          path: deploy.tar.gz

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Set up directory
            sudo mkdir -p /var/www/gallery
            sudo chown -R $USER:$USER /var/www/gallery
            cd /var/www/gallery

            # Download artifact directly
            curl -sL \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
              | grep -o '"archive_download_url": "[^"]*' | grep -o '[^"]*$' \
              | head -1 | xargs curl -sL -o deploy.zip -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"

            unzip deploy.zip
            tar -xzvf deploy.tar.gz
            cp deploy_files/* .
            rm -rf deploy_files deploy.tar.gz deploy.zip

            # Deploy containers
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            docker compose down || true
            docker compose up -d --wait

            # Run migrations
            docker exec laravel_server php artisan migrate --force
