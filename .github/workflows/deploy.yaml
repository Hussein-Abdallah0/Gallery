name: Deploy Laravel Application

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Cleanup previous deployment
            docker stop laravel_server || true
            docker rm laravel_server || true

            # Create storage structure with correct permissions
            sudo mkdir -p /var/www/html/storage
            sudo mkdir -p /var/www/html/storage/framework/{cache,sessions,views}
            sudo mkdir -p /var/www/html/storage/logs
            sudo chown -R 1000:1000 /var/www/html/storage
            sudo chmod -R 777 /var/www/html/storage

            # Pull new image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app:latest

            # Run container with production settings
            docker run -d \
              --name laravel_server \
              -p 8000:80 \
              -v /var/www/html/storage:/var/www/html/storage \
              -e APP_ENV=production \
              -e APP_DEBUG=true \  # Temporarily enable debug for troubleshooting
              -e APP_KEY=base64:${{ secrets.APP_KEY }} \
              -e LOG_CHANNEL=daily \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app:latest

            # Wait for container to initialize
            sleep 30

            # Execute critical setup commands
            docker exec laravel_server bash -c "
              mkdir -p /var/www/html/storage/logs
              touch /var/www/html/storage/logs/laravel.log
              chown -R www-data:www-data /var/www/html/storage
              chmod -R 775 /var/www/html/storage
              chown -R www-data:www-data /var/www/html/bootstrap/cache
              php artisan config:clear
              php artisan cache:clear
              php artisan view:clear
              php artisan route:clear
              php artisan optimize
              php artisan migrate --force
            "

            # Verify deployment
            echo "=== Checking Application Status ==="
            docker exec laravel_server ls -la /var/www/html/storage/logs/
            docker exec laravel_server php artisan route:list
            docker exec laravel_server php artisan --version
            echo "=== Apache Error Log ==="
            docker exec laravel_server tail -n 50 /var/log/apache2/error.log || echo "Could not access error logs"
            echo "=== Laravel Log ==="
            docker exec laravel_server tail -n 50 /var/www/html/storage/logs/laravel.log || echo "Could not access laravel logs"
