name: Deploy Gallery Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: yourdockerhubusername/gallery-backend

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: gallerydb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, zip, mysql, xml
          coverage: none

      - name: Install dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist

      - name: Copy .env
        run: |
          cd backend
          cp .env.example .env
          sed -i 's/APP_ENV=local/APP_ENV=testing/g' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/g' .env
          sed -i 's/DB_DATABASE=gallerydb/DB_DATABASE=gallerydb/g' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/g' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/g' .env

      - name: Generate app key
        run: php artisan key:generate --env=testing
        working-directory: ./backend

      - name: Execute tests
        run: php artisan test
        working-directory: ./backend

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            cd /path/to/your/project
            docker-compose down
            docker-compose up -d
            docker exec gallery_backend php artisan migrate --force
            docker exec gallery_backend php artisan config:cache
            docker exec gallery_backend php artisan route:cache
